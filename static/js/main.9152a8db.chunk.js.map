{"version":3,"sources":["components/Header.js","api/JsonPlaceholderData.js","components/Card.js","App.js","DefaultTheme.js","index.js"],"names":["useStyles","makeStyles","theme","root","Header","Typography","variant","gutterBottom","color","align","GetAllPosts","a","fetch","result","json","AddNewPost","data","body","JSON","stringify","method","headers","UpdatePost","then","response","DeletePost","id","card","margin","spacing","borderRadius","delete","background","palette","error","main","title","textTransform","PostCard","onDelete","classes","useState","input","setInput","edit","setEdit","handleChange","e","pre","target","name","value","Card","raised","className","CardActionArea","CardContent","component","TextField","label","onChange","CardActions","Button","onClick","size","console","log","onUpdate","left","right","grey","boxShadow","height","containerGrid","breakpoints","down","flexDirection","App","posts","setPosts","setData","useEffect","Container","Grid","container","item","xs","md","map","filter","ele","Update","onSubmit","preventDefault","fullWidth","required","style","type","fontWeight","createMuiTheme","secondary","teal","overrides","MuiButton","ReactDOM","render","ThemeProvider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9152a8db.chunk.js","sourcesContent":["import { makeStyles, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n\r\n    }\r\n}))\r\nfunction Header() {\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <Typography\r\n            variant=\"h3\"\r\n            gutterBottom\r\n            color=\"secondary\"\r\n            align=\"center\"> </Typography>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export const GetAllPosts = async () => {\r\n    try {\r\n        const result = await fetch('https://jsonplaceholder.typicode.com/posts/');\r\n        return await result.json();\r\n    } catch (error) {\r\n        return null\r\n    }\r\n}\r\n\r\nexport const AddNewPost = async (data) => {\r\n    try {\r\n        const result = await fetch('https://jsonplaceholder.typicode.com/posts/',\r\n            {\r\n                body: JSON.stringify(data),\r\n                method: \"POST\",\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n        );\r\n        return await result.json();\r\n    } catch (error) {\r\n        return null\r\n    }\r\n}\r\n\r\nexport const UpdatePost = async (data) => {\r\n    return fetch('https://jsonplaceholder.typicode.com/posts/1', {\r\n        method: 'PUT',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n    })\r\n        .then((response) => response.json())\r\n}\r\n\r\nexport const DeletePost = async (id) => {\r\n    try {\r\n        const result = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`,\r\n            {method: \"DELETE\"}\r\n        );\r\n        return await result.json();\r\n    } catch (error) {\r\n        return null\r\n    }\r\n}","import {\r\n    Button, Typography,\r\n    Card, CardActionArea,\r\n    CardActions, CardContent,\r\n    makeStyles,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { UpdatePost } from \"../api/JsonPlaceholderData\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(3, 0),\r\n        borderRadius: \"6px\"\r\n    },\r\n    delete: { background: theme.palette.error.main },\r\n    title: { textTransform: 'capitalize' }\r\n}))\r\n\r\nfunction PostCard({ id, title, body, onDelete }) {\r\n    const classes = useStyles()\r\n    const [input, setInput] = useState({\r\n        title: '',\r\n        body: ''\r\n    })\r\n    const [edit, setEdit] = useState(true);\r\n\r\n    const handleChange = (e) => {\r\n        setInput(pre => ({\r\n            ...pre,\r\n            [e.target.name]: e.target.value\r\n        }))\r\n    }\r\n    const onUpdate = (id) => {\r\n        console.log(id, \"update \")\r\n        UpdatePost({ id, ...input }).then(data => {\r\n            id = data.id\r\n            title = data.title\r\n            body = data.body\r\n            setEdit(true)\r\n        })\r\n    }\r\n    return (\r\n        <Card key={id} raised className={classes.card}>\r\n            <CardActionArea>\r\n                <CardContent>\r\n                    {\r\n                        edit ?\r\n                            <>\r\n                                <Typography\r\n                                    variant=\"h5\"\r\n                                    color=\"textPrimary\"\r\n                                    gutterBottom\r\n                                    className={classes.title}\r\n                                >\r\n                                    {title}</Typography>\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                    component=\"p\"\r\n                                    gutterBottom\r\n                                >\r\n                                    {body}\r\n                                </Typography>\r\n                            </> :\r\n                            <>\r\n                                <TextField\r\n                                    name=\"title\"\r\n                                    label=\"title\"\r\n                                    onChange={handleChange}>\r\n                                    {title}\r\n                                </TextField>\r\n\r\n                                <TextField\r\n                                    label=\"body\"\r\n                                    name=\"body\"\r\n                                    onChange={handleChange}>\r\n                                    {body}\r\n                                </TextField>\r\n                            </>\r\n                    }\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Button onClick={() => setEdit(!edit)} variant=\"outlined\" color=\"primary\">\r\n                    Edit\r\n            </Button>\r\n                <Button size=\"small\" className={classes.delete} onClick={onDelete} variant=\"contained\">\r\n                    Delete\r\n          </Button>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => onUpdate(id)} variant=\"contained\">\r\n                    Update\r\n          </Button>\r\n            </CardActions>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default PostCard\r\n","import { Button, Container, Grid, makeStyles, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\nimport { AddNewPost, DeletePost, GetAllPosts, UpdatePost } from './api/JsonPlaceholderData';\n\nconst useStyles = makeStyles(theme => ({\n  left: {\n\n  },\n  right: {\n    background: theme.palette.grey[100],\n    boxShadow: '0 1px 3px gray',\n    height: \"90vh\",\n    // position: 'fixed',\n    // top: 0,\n    // right : 0\n    margin: '1rem 0',\n    borderRadius: '1rem'\n  },\n\n  containerGrid: {\n    [theme.breakpoints.down('md')]: {\n      // flexDirextion: 'column-reverse'\n      flexDirection: 'column-reverse',\n    }\n  }\n}))\n\n\nfunction App() {\n  const classes = useStyles()\n  const [posts, setPosts] = useState([]);\n  const [data, setData] = useState({\n    title: \"\",\n    body: \"\"\n  })\n\n  useEffect(() => {\n    GetAllPosts().then(data => {\n      if (data) setPosts(data)\n      console.log(data)\n    })\n  }, [])\n\n  const AddPost = (e) => {\n    e.preventDefault()\n    AddNewPost(data).then(data => {\n      setPosts(pre => ([data, ...pre]))\n    })\n  }\n  const Delete = (id) => {\n    console.log(id)\n\n    DeletePost(id).then(data => {\n      setPosts(pre => {\n        return pre.filter(ele => {\n          return ele.id !== id\n        })\n      })\n      console.log(\"delete\", data)\n    })\n  }\n\n  const Update = (data)=>{\n    UpdatePost(data).then(data=>{\n      \n    })\n  }\n  const handleChange = (e) => setData(pre => ({ ...pre, [e.target.name]: e.target.value }))\n\n  return (\n    <div className=\"App\">\n\n      {/* header representing website  */}\n      <Header />\n\n      {/* all the main contained */}\n      <Container>\n        <Grid container spacing={8}\n          className={classes.containerGrid}\n        // classes={{ \"direction-xs-column-reverse\": classes.containerGrid }} \n        >\n          <Grid className={classes.left} item xs={12} md={8}>\n            {\n              posts.map(card => (\n                <Card\n                  key={card.id}\n                  id={card.id}\n                  title={card.title}\n                  body={card.body}\n                  onDelete = {() => Delete(card.id)}\n                  onUpdate = {() => Update(card.id)}\n\n                />))\n            }\n          </Grid>\n          <Grid className={classes.right} item xs={12} md={4}>\n\n            <form onSubmit={AddPost} >\n              <TextField\n                variant=\"outlined\"\n                name=\"title\"\n                value={data.title}\n                label=\"Title\"\n                color=\"secondary\"\n                size=\"small\"\n                fullWidth\n                required\n                onChange={handleChange}\n              />\n              <TextField\n                name=\"body\"\n                variant=\"outlined\"\n                value={data.value}\n                label=\"Body\"\n                color=\"secondary\"\n                size=\"small\"\n                fullWidth\n                required\n                onChange={handleChange}\n                style={{\n                  margin: '1rem 0'\n                }}\n              />\n              <Button\n                type=\"submit\"\n                style={{ fontWeight: 700 }}\n                fullWidth\n                color=\"secondary\"\n                variant=\"contained\" >\n                ADD POSTS\n            </Button>\n            </form>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;","import { createMuiTheme } from \"@material-ui/core\";\r\nimport {  teal } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        secondary :teal\r\n    },\r\n    overrides : {\r\n        MuiButton : {\r\n            root : {\r\n                borderRadius : '12px',\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport default theme;","import { ThemeProvider } from '@material-ui/styles';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport theme from './DefaultTheme';\nimport './index.css';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}